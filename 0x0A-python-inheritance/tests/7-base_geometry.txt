class TestBaseGeometry:
    def setUp(self):
        self.base_geometry = BaseGeometry()

    def test_area_not_implemented(self):
        try:
            self.base_geometry.area()
        except Exception as e:
            assert str(e) == "area() is not implemented"

    def test_integer_validator_valid_input(self):
        # Test with valid input
        assert self.base_geometry.integer_validator("test_param", 5) is None

    def test_integer_validator_invalid_type(self):
        # Test with invalid type
        try:
            self.base_geometry.integer_validator("test_param", "invalid_value")
        except TypeError as e:
            assert str(e) == "test_param must be an integer"

    def test_integer_validator_invalid_value(self):
        # Test with invalid value
        try:
            self.base_geometry.integer_validator("test_param", 0)
        except ValueError as e:
            assert str(e) == "test_param must be greater than 0"


# Run the tests
test_instance = TestBaseGeometry()
test_instance.setUp()
test_instance.test_area_not_implemented()
test_instance.test_integer_validator_valid_input()
test_instance.test_integer_validator_invalid_type()
test_instance.test_integer_validator_invalid_value()

